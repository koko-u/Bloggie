// <auto-generated />
using System;
using Bloggie.Db.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bloggie.Db.Migrations
{
    [DbContext(typeof(BloggieDbContext))]
    [Migration("20240504135806_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bloggie.Db.Models.Domain.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("author");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<string>("FeaturedImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("featured_image_url");

                    b.Property<string>("Heading")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("heading");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit")
                        .HasColumnName("is_visible");

                    b.Property<string>("PageTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("page_title");

                    b.Property<DateTime?>("PublishedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("published_on");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("short_description");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_handle");

                    b.HasKey("Id");

                    b.ToTable("blog_posts");
                });

            modelBuilder.Entity("Bloggie.Db.Models.Domain.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("BlogPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("blog_post_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tags");
                });

            modelBuilder.Entity("Bloggie.Db.Models.Domain.Tag", b =>
                {
                    b.HasOne("Bloggie.Db.Models.Domain.BlogPost", "BlogPost")
                        .WithMany()
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("BlogPost");
                });
#pragma warning restore 612, 618
        }
    }
}
